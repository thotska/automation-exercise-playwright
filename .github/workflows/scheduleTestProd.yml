name: Scheduled UI Tests - PROD Environment

on:
  schedule:
    # Runs every Monday, Wednesday, and Friday at 3 AM UTC (off-peak hours)
    - cron: '0 3 * * 1,3,5'
  workflow_dispatch: # Allows manual trigger
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'critical'
        type: choice
        options:
          - critical
          - all
      browser:
        description: 'Browser to test'
        required: false
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
          - all
      retries:
        description: 'Number of retries for failed tests'
        required: false
        default: '3'
        type: string

env:
  ENVIRONMENT: prod
  BASE_URL: https://automationexercise.com

jobs:
  test:
    name: Run Playwright Tests - PROD

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]
        shard: [1/2, 2/2]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'LTS'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium firefox webkit

      - name: Run critical tests (default for PROD)
        if: ${{ github.event.inputs.test_suite == 'critical' || github.event.inputs.test_suite == '' }}
        run: |
          RETRIES=${{ github.event.inputs.retries }}
          RETRIES=${RETRIES:-3}
          
          if [ "${{ github.event.inputs.browser }}" == "all" ]; then
            npx playwright test tests/critical --retries=$RETRIES --shard=${{ matrix.shard }}
          elif [ "${{ github.event.inputs.browser }}" != "" ]; then
            npx playwright test tests/critical --project=${{ github.event.inputs.browser }} --retries=$RETRIES --shard=${{ matrix.shard }}
          else
            npx playwright test tests/critical --project=${{ matrix.browser }} --retries=$RETRIES --shard=${{ matrix.shard }}
          fi
        env:
          CI: true

      - name: Run all tests (use with caution on PROD)
        if: ${{ github.event.inputs.test_suite == 'all' }}
        run: |
          RETRIES=${{ github.event.inputs.retries }}
          RETRIES=${RETRIES:-3}
          
          if [ "${{ github.event.inputs.browser }}" == "all" ]; then
            npx playwright test --retries=$RETRIES --shard=${{ matrix.shard }}
          elif [ "${{ github.event.inputs.browser }}" != "" ]; then
            npx playwright test --project=${{ github.event.inputs.browser }} --retries=$RETRIES --shard=${{ matrix.shard }}
          else
            npx playwright test --project=${{ matrix.browser }} --retries=$RETRIES --shard=${{ matrix.shard }}
          fi
        env:
          CI: true

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-prod-${{ matrix.browser }}-shard-${{ matrix.shard }}-${{ github.run_number }}
          path: playwright-report/
          retention-days: 30

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-prod-${{ matrix.browser }}-shard-${{ matrix.shard }}-${{ github.run_number }}
          path: test-results/
          retention-days: 30

      - name: Upload Failure Artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failure-artifacts-prod-${{ matrix.browser }}-shard-${{ matrix.shard }}-${{ github.run_number }}
          path: |
            test-results/**/*.png
            test-results/**/*.webm
            test-results/**/*-trace.zip
          retention-days: 30

  merge-reports:
    name: Merge Test Reports
    if: always()
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'LTS'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-reports
          pattern: playwright-report-prod-*
          
      - name: Merge reports
        run: npx playwright merge-reports --reporter html ./all-reports
        
      - name: Upload merged report
        uses: actions/upload-artifact@v4
        with:
          name: merged-playwright-report-prod-${{ github.run_number }}
          path: playwright-report/
          retention-days: 30

  notify:
    name: Notify Test Results
    needs: [test, merge-reports]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check test status
        run: |
          if [ "${{ needs.test.result }}" == "failure" ]; then
            echo "⚠️ PRODUCTION TESTS FAILED ⚠️"
            echo "TEST_STATUS=❌ Failed" >> $GITHUB_ENV
          elif [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ Production tests passed"
            echo "TEST_STATUS=✅ Passed" >> $GITHUB_ENV
          else
            echo "⚠️ Tests completed with status: ${{ needs.test.result }}"
            echo "TEST_STATUS=⚠️ ${{ needs.test.result }}" >> $GITHUB_ENV
          fi
          
      - name: Create detailed summary
        run: |
          echo "## 🚀 PROD Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ env.TEST_STATUS }}" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** PRODUCTION" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow Run:** [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- Browsers: chromium, firefox" >> $GITHUB_STEP_SUMMARY
          echo "- Sharding: 2 shards per browser" >> $GITHUB_STEP_SUMMARY
          echo "- Retries: ${{ github.event.inputs.retries || '3' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Test Suite: ${{ github.event.inputs.test_suite || 'critical' }}" >> $GITHUB_STEP_SUMMARY
